2018/08/23

자바수업_코드

////9-19
//class  StringBufferEx2 {
//	public static void main(String[] args) {
//		StringBuffer sb  = new StringBuffer("01");
//		System.out.println(sb.toString());
//		
//		StringBuffer sb2 = sb.append(23);
//		System.out.println(sb2.toString());
//		
//		sb.append('4').append(56);
//		System.out.println(sb.toString());
//		
//		StringBuffer sb3 = sb.append(78);	
//		System.out.println(sb.toString());
//		
//		sb3.append(9.0);
//		System.out.println(sb3.toString());
//		
//		System.out.println(" ");
//		
//		System.out.println("sb ="+sb);
//		System.out.println("sb2="+sb2);
//		System.out.println("sb3="+sb3);
//
//		System.out.println("sb ="+sb.deleteCharAt(10));
//		System.out.println("sb ="+sb.delete(3,6));
//		System.out.println("sb ="+sb.insert(3,"abc"));
//		System.out.println("sb ="+sb.replace(6, sb.length(), "END"));
//
//		System.out.println("capacity="+sb.capacity());
//		System.out.println("length="+sb.length());
//	}
//}


////9-20
//import static java.lang.Math.*;
//import static java.lang.System.*;
//
//class MathEx1 {
//	public static void main(String args[]) {
//		
//		System.out.println(Math.round(3.141592));
//		
//		double val = 90.7552;
//		out.println("round("+ val +")=" + round(val));  // 반올림
//
//		val *= 100;
//		out.println("round("+ val +")=" + round(val));  // 반올림
//
//		out.println("round("+ val +")/100  =" + round(val)/100);  // 반올림
//		out.println("round("+ val +")/100.0=" + round(val)/100.0);  // 반올림
//		out.println();
//		
//		out.println(ceil(1.1));
//		out.printf("ceil(%3.1f)=%3.1f%n",  1.1, ceil(1.1));   // 올림
//		out.printf("floor(%3.1f)=%3.1f%n", 1.5, floor(1.5));  // 버림	
//		out.printf("round(%3.1f)=%d%n",    1.1, round(1.1));  // 반올림
//		out.printf("round(%3.1f)=%d%n",    1.5, round(1.5));  // 반올림
//		out.printf("rint(%3.1f)=%f%n",     1.5, rint(1.5));   // 반올림
//		out.printf("round(%3.1f)=%d%n",   -1.5, round(-1.5)); // 반올림
//		out.printf("rint(%3.1f)=%f%n",    -1.5, rint(-1.5));  // 반올림
//		out.printf("ceil(%3.1f)=%f%n",    -1.5, ceil(-1.5));  // 올림
//		out.printf("floor(%3.1f)=%f%n",   -1.5, floor(-1.5)); // 버림
//	}
//}


////9-24
//class WrapperEx2 {
//	public static void main(String[] args) {
//		
//		 String value =  "3.14";
//		 
//		// int value =  3;
//		// Double value =  3.14;
//		
//		 double d1 =Double.parseDouble(value);
//		
//		// int d2 = Integer.parseInt(value);
//		int d2 = (int) d1;
//		
//		System.out.println(Integer.valueOf("11100",2));
//		
//		int		 i  = new Integer("100").intValue();
//		int		 i2 = Integer.parseInt("100");
//		Integer  i3 = Integer.valueOf("100");
//
//		int i4 = Integer.parseInt("100",2);
//		int i5 = Integer.parseInt("100",8);
//		int i6 = Integer.parseInt("100",16);
//		int i7 = Integer.parseInt("FF", 16);
////		int i8 = Integer.parseInt("FF");  // NumberFormatException발생
//
//		Integer i9 = Integer.valueOf("100",2);
//		Integer i10 = Integer.valueOf("100",8);
//		Integer i11 = Integer.valueOf("100",16);
//		Integer i12 = Integer.valueOf("FF",16);
////		Integer i13 = Integer.valueOf("FF"); // NumberFormatException발생
//
//		System.out.println(i);
//		System.out.println(i2);
//		System.out.println(i3);
//		System.out.println("100(2) -> "+i4);
//		System.out.println("100(8) -> "+i5);
//		System.out.println("100(16)-> "+i6);
//		System.out.println("FF(16) -> "+i7);
//
//		System.out.println("100(2) -> "+i9);
//		System.out.println("100(8) -> "+i10);
//		System.out.println("100(16)-> "+i11);
//		System.out.println("FF(16) -> "+i12);
//	}
//}


////9-31
//// import java.util.regex.Matcher;
//// import java.util.regex.Pattern;
//
// import java.util.regex.*;	// Pattern과 Matcher가 속한 패키지
//
//class RegularEx1 {
//	public static void main(String[] args) 
//	{
//		String[] data = {"bat", "baby", "bonus",
//				    "cA","ca", "co", "c.", "c0", "car","combat","count",
//				    "date", "disc"};		
//		
//		// 정규표현식 : 데이터에서 원하는 문자열을 찾아 내기 위해서 사용하는 정해진 문법.
//		// c[a-z]*  
//		// c : 글자 c
//		// [a-z] : 알파벳 소문자
//		// * : 0~N 개 
//		
//		Pattern p = Pattern.compile("c[a-z]*");	// c로 시작하는 소문자영단어
//
//		for(int i=0; i < data.length; i++) {
//			Matcher m = p.matcher(data[i]);
//			if(m.matches())
//				System.out.print(data[i] + ",");
//		}
//	}
//}


////9-44
//import java.math.*;
//import static java.math.BigDecimal.*;
//import static java.math.RoundingMode.*;
//
//class BigDecimalEx {
//	public static void main(String[] args) throws Exception {
//		
//		double $a = 0.03;
//		double b = 0.04;
//		double c = b - $a;
//		System.out.println(c);
//		
//		// #1 값을 보정해서 정수로 만들어 놓고 연산한 후에 원래대로 돌려 놓는다.
//		
//		// #2 커다란 값이 정확한 계산을 지원하는 클래스를 사용한다.
//		BigDecimal _a = new BigDecimal("0.03");
//		BigDecimal _b = new BigDecimal("0.04");
//		BigDecimal _c = _b.subtract(_a);
//		System.out.println(_c);
//		
//		System.out.println(" ");
//		System.out.println(1 + 2);
//		System.out.println(0.1 + 2.0);
//		System.out.println(1 - 2.0);
//		System.out.println(1.0 + 0.2);
//		
//		BigDecimal bd1 = new BigDecimal("123.456"); 
//		BigDecimal bd2 = new BigDecimal("1.0"); 
//
//		System.out.print("bd1="+bd1);
//		System.out.print(",\tvalue="+bd1.unscaledValue());
//		System.out.print(",\tscale="+bd1.scale());		 
//		System.out.print(",\tprecision="+bd1.precision());
//		System.out.println();
//
//		System.out.print("bd2="+bd2);
//		System.out.print(",\tvalue="+bd2.unscaledValue());
//		System.out.print(",\tscale="+bd2.scale());		 
//		System.out.print(",\tprecision="+bd2.precision());
//		System.out.println();
//
//		
//		BigDecimal bd3 = bd1.multiply(bd2);
//		System.out.print("bd3="+bd3);
//		System.out.print(",\tvalue="+bd3.unscaledValue());
//		System.out.print(",\tscale="+bd3.scale());		 
//		System.out.print(",\tprecision="+bd3.precision());
//		System.out.println();
//
//		System.out.println(bd1.divide(bd2, 2, HALF_UP)); // 123.46
//		System.out.println(bd1.setScale(2, HALF_UP));    // 123.46
//		System.out.println(bd1.divide(bd2, new MathContext(2, HALF_UP)));
//	}
//}



////10-1
//import java.util.*;
//
//class  CalendarEx1 {
//	public static void main(String[] args) 
//	{      // 기본적으로 현재날짜와 시간으로 설정된다.
//			// new Calendar(); 불가능하다.
//			// 캘린더 클래스는 추상클래스(추상메소드(로직이 없음)가 존재) 로써
//			// new 연산자로 객체를 생성할 수 없다.
//		
//		
//		Calendar today = Calendar.getInstance();
//		
//		
//		// getInstance 메소드 안에서 OS에게 문의해서 지역정보를 얻은 후 
//		// 태국이 아니라면 new GregorianCalendar(); 객체를 생성해서 리턴한다.
//		System.out.println(today instanceof GregorianCalendar);
//		
//		System.out.println("이 해의 년도 : " + today.get(Calendar.YEAR));
//		System.out.println("월(0~11, 0:1월): "	+ today.get(Calendar.MONTH));
//		System.out.println("이 해의 몇 째 주: "		+ today.get(Calendar.WEEK_OF_YEAR));
//		System.out.println("이 달의 몇 째 주: "		+ today.get(Calendar.WEEK_OF_MONTH));
//		// DATE와 DAY_OF_MONTH는 같다.
//		System.out.println("이 달의 몇 일: "		+ today.get(Calendar.DATE));
//		System.out.println("이 달의 몇 일: "		+ today.get(Calendar.DAY_OF_MONTH));
//		System.out.println("이 해의 몇 일: "		+ today.get(Calendar.DAY_OF_YEAR));
//		System.out.println("이 해의 몇 일: "		+ today.get(6));
//		
//		System.out.println("요일(1~7, 1:일요일): " + today.get(Calendar.DAY_OF_WEEK)); // 1:일요일, 2:월요일, ... 7:토요일
//		System.out.println("이 달의 몇 째 요일: "	+ today.get(Calendar.DAY_OF_WEEK_IN_MONTH));
//		System.out.println("오전_오후(0:오전, 1:오후): " + today.get(Calendar.AM_PM));
//		System.out.println("시간(0~11): "	+ today.get(Calendar.HOUR));
//		System.out.println("시간(0~23): "	+ today.get(Calendar.HOUR_OF_DAY));
//		System.out.println("분(0~59): "	+ today.get(Calendar.MINUTE));
//		System.out.println("초(0~59): "	+ today.get(Calendar.SECOND));
//		System.out.println("1000분의 1초(0~999): " + today.get(Calendar.MILLISECOND));
//        
//		// 천분의 1초를 시간으로 표시하기 위해 3600000으로 나누었다.(1시간 = 60 * 60초)
//		System.out.println("TimeZone(-12~+12): " + (today.get(Calendar.ZONE_OFFSET)/(60*60*1000))); 
//		System.out.println("이 달의 마지막 날: " + today.getActualMaximum(Calendar.DATE) ); // 이 달의 마지막 일을 찾는다.
//	}
//}


////10-6
//import java.util.*; 
//
//class CalendarEx6 { 
//      public static void main(String[] args) { 
//            if(args.length !=2) { 
//                  System.out.println("Usage : java CalendarEx6 2015 9"); 
//                  return; 
//            } 
//            int year = Integer.parseInt(args[0]); 
//            int month = Integer.parseInt(args[1]); 
//
//            int START_DAY_OF_WEEK = 0; 
//            int END_DAY = 0; 
//
//            Calendar sDay = Calendar.getInstance();       // 시작일 
//            Calendar eDay = Calendar.getInstance();       // 끝일 
//
//            // 월의 경우 0 부터 11까지의 값을 가지므로 1을 빼주어야 한다. 
//            // 예를 들어, 2004년 11월 1일은 sDay.set(2004, 10, 1);과 같이 해줘야 한다. 
//            sDay.set(year, month-1, 1);       
//            eDay.set(year, month, 1); 
//
//            // 다음달의 첫날에서 하루를 빼면 현재달의 마지막 날이 된다. 
//            // 12월 1일에서 하루를 빼면 11월 30일이 된다. 
//            eDay.add(Calendar.DATE, -1);       
//
//            // 첫 번째 요일이 무슨 요일인지 알아낸다. 
//            START_DAY_OF_WEEK = sDay.get(Calendar.DAY_OF_WEEK); 
//            // eDay에 지정된 날짜를 얻어온다. 
//            END_DAY = eDay.get(Calendar.DATE); 
//            
//            System.out.println("      " + args[0] +"년 " + args[1] +"월"); 
//            System.out.println(" SU MO TU WE TH FR SA"); 
//
//            // 해당 월의 1일이 어느 요일인지에 따라서 공백을 출력한다. 
//            // 만일 1일이 수요일이라면 공백을 세 번 찍는다.(일요일부터 시작) 
//            for(int i=1; i < START_DAY_OF_WEEK; i++) { 
//                  System.out.print("   "); 
//            } 
//
//            for(int i=1, n=START_DAY_OF_WEEK ; i <= END_DAY; i++, n++) { 
//                  System.out.print((i < 10)? "  "+i : " "+i ); 
//                  if(n%7==0) System.out.println(); 
//            } 
//      } 
//} 


////10-12
//import java.util.*;
//import java.text.*;
//
//class DateFormatEx1 {
//	public static void main(String[] args) {
//		Date today = new Date();
//		System.out.println(today); 	// Thu Aug 23 14:29:57 KST 2018
//
//		SimpleDateFormat sdf1, sdf2, sdf3, sdf4;
//		SimpleDateFormat sdf5, sdf6, sdf7, sdf8, sdf9;
//
//		/*
//		 * yyyy-MM-dd : 년4자리 - 월 2 자리 일 2자리 
//		 * hh:mm:ss a : 시간 : 분 : 초 : 오전/오후 
//		 * */
//		
//		sdf1 = new SimpleDateFormat("yyyy-MM-dd");
//		sdf2 = new SimpleDateFormat("''yy년 MMM dd일 E요일");
//		sdf3 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
//		sdf4 = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss a");
//
//		sdf5 = new SimpleDateFormat("오늘은 올 해의 D번째 날입니다.");
//		sdf6 = new SimpleDateFormat("오늘은 이 달의 d번째 날입니다.");
//		sdf7 = new SimpleDateFormat("오늘은 올 해의 w번째 주입니다.");
//		sdf8 = new SimpleDateFormat("오늘은 이 달의 W번째 주입니다.");
//		sdf9 = new SimpleDateFormat("오늘은 이 달의 F번째 E요일입니다.");
//
//		System.out.println(sdf1.format(today));	// format(Date d)
//		System.out.println(sdf2.format(today));
//		System.out.println(sdf3.format(today));
//		System.out.println(">>"+sdf4.format(today));
//		System.out.println();
//		System.out.println(sdf5.format(today));
//		System.out.println(sdf6.format(today));
//		System.out.println(sdf7.format(today));
//		System.out.println(sdf8.format(today));
//		System.out.println(sdf9.format(today));
//	}
//}

////11-1
//import java.util.*;
//
//class ArrayListEx1{
//	public static void main(String[] args) {
//		
//		// ArrayList is a raw type. ==> ArrayList<Object>
//		ArrayList<Integer> list1 = new ArrayList<>(10);
//		list1.add(new Integer(5));
//		list1.add(new Integer(4));
//		list1.add(new Integer(2));
//		list1.add(new Integer(0));
//		list1.add(new Integer(1));
//		list1.add(3);
//		// list1.add("");
//		
//
//		ArrayList list2 = new ArrayList(list1.subList(1,4)); 
//		print(list1, list2);
//
//		Collections.sort(list1);	// list1과 list2를 오름차순 정렬한다.
//		Collections.sort(list2);	// Collections.sort(List l)
//		print(list1, list2);
//
//		System.out.println("list1.containsAll(list2):" + list1.containsAll(list2));
//
//		list2.add("B");
//		list2.add("C");
//		list2.add(3, "A");
//		print(list1, list2);
//
//		list2.set(3, "AA");
//		print(list1, list2);
//		
//		// list1에서 list2와 겹치는 부분만 남기고 나머지는 삭제한다.
//		System.out.println("list1.retainAll(list2):" + list1.retainAll(list2));	
//		print(list1, list2);
//		
//		//  list2에서 list1에 포함된 객체들을 삭제한다.
//		for(int i= list2.size()-1; i >= 0; i--) {
//			if(list1.contains(list2.get(i)))
//				list2.remove(i);
//		}
//		print(list1, list2);
//	} // main의 끝
//
//	static void print(ArrayList list1, ArrayList list2) {
//		System.out.println("list1:"+list1);
//		System.out.println("list2:"+list2);
//		System.out.println();		
//	}
//} // class


////11-7
//import java.util.LinkedList;
//import java.util.Queue;
//import java.util.Stack;
//
//// import java.util.*;
//
//class StackQueueEx {
//	public static void main(String[] args) {
//		Stack<String> st = new Stack<>();
//		Queue<String> q = new LinkedList<String>();	 
//		// Queue인터페이스의 구현체인 LinkedList를 사용
//		
//		// 항아리 
//		st.push("0");
//		st.push("1");
//		st.push("2");
//
//		// 파이프 
//		q.offer("0");
//		q.offer("1");
//		q.offer("2");
//
//		System.out.println("= Stack =");
//		while(!st.empty()) {
//			System.out.println(st.pop()); 	// LIFO
//		}
//
//		System.out.println("= Queue ="); 	// FIFO
//		while(!q.isEmpty()) {
//			System.out.println(q.poll());
//		}
//	}
//}


////11-8
//import java.util.*;
//
//public class StackEx1 {
//	public static Stack back    = new Stack();
//	public static Stack forward = new Stack();  
//
//	public static void main(String[] args) {
//		goURL("1.네이트");
//		goURL("2.야후");
//		goURL("3.네이버");
//		goURL("4.다음");
//
//		printStatus();
//
//		goBack();
//		System.out.println("= 뒤로가기 버튼을 누른 후 =");  
//		printStatus();
//
//		goBack();
//		System.out.println("= '뒤로' 버튼을 누른 후 =");  
//		printStatus();
//
//		goForward();
//		System.out.println("= '앞으로' 버튼을 누른 후 =");  
//		printStatus();
//
//		goURL("codechobo.com");
//		System.out.println("= 새로운 주소로 이동 후 =");  
//		printStatus();
//	}
//
//	public static void printStatus() {
//		System.out.println("back:"+back);
//		System.out.println("forward:"+forward);
//		System.out.println("현재화면은 '" + back.peek()+"' 입니다.");  
//		System.out.println();
//	}
//
//	public static void goURL(String url){
//		back.push(url);
//		if(!forward.empty()) 
//			forward.clear();
//	}
//
//	public static void goForward(){
//		if(!forward.empty())
//			back.push(forward.pop());
//	}
//
//	public static void goBack(){
//		if(!back.empty())
//			forward.push(back.pop());
//	}
//}


////11-19
//import java.util.*;
//
//class ComparatorEx {
//	public static void main(String[] args) {
//		String[] strArr = {"cat", "Dog", "lion", "tiger"};
//		System.out.println(Arrays.toString(strArr));
//
//		Arrays.sort(strArr); // String의 Comparable구현에 의한 정렬
//		System.out.println("strArr=" + Arrays.toString(strArr));
//
//		Arrays.sort(strArr, String.CASE_INSENSITIVE_ORDER); // 대소문자 구분안함
//		System.out.println("strArr=" + Arrays.toString(strArr));
//
//		Arrays.sort(strArr, new Descending()); // 역순 정렬
//		System.out.println("strArr=" + Arrays.toString(strArr));
//	}
//}
//
//class Descending implements Comparator { 
//	/*
//	 * 리턴값
//	 * 1 : 크다.
//	 * 0 : 같다.
//	 * -1 : 작다.
//	 * */
//	
//	public int compare(Object o1, Object o2){
//		// o1,o2가 가리키는 객체는 Comparable 인터페이스 구현체로써
//		// 객체안에 compareTO 메소드가 존재한다.
//		if( o1 instanceof Comparable && o2 instanceof Comparable) {
//		
//			Comparable c1 = (Comparable)o1;
//			Comparable c2 = (Comparable)o2;
//			
//			return c1.compareTo(c2) * -1 ;
//			// -1을 곱해서 기본 정렬방식의 역으로 변경한다.
//		   // 또는 c2.compareTo(c1)와 같이 순서를 바꿔도 된다.
//
//		}
//		return -1;
//	} 
//} 


